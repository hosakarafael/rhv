import type { Metadata } from "next";
import localFont from "next/font/local";
import "../globals.css";
import { UserProvider } from "@/context/userContext";
import { SidebarProvider } from "@/context/sidebarContext";
import { ThemeProvider } from "@/context/themeContext";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";

const geistSans = localFont({
  src: "../../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: `${process.env.APP_NAME}  ${process.env.APP_VERSION}`,
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={locale}>
      <head>
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white dark:bg-black`}
      >
        <NextIntlClientProvider messages={messages}>
          <UserProvider>
            <SidebarProvider>
              <ThemeProvider>{children}</ThemeProvider>
            </SidebarProvider>
          </UserProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
